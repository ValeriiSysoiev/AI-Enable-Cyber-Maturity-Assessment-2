name: build-and-deploy

on:
  workflow_dispatch:
  # Disabled automatic triggers until secrets are configured
  # push:
  #   branches: [ main ]

# Set default permissions to read-only for security
permissions:
  contents: read
  packages: write

# Prevent multiple runs for the same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GHCR_ENABLED: 1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Set lowercase repository owner
        run: echo "REPO_OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # OAuth scope fix verified - can now modify workflows!
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Web image
        uses: docker/build-push-action@v5
        with:
          context: ./web
          push: true
          tags: |
            ghcr.io/${{ env.REPO_OWNER_LOWER }}/aecma-web:${{ github.sha }}
            ghcr.io/${{ env.REPO_OWNER_LOWER }}/aecma-web:latest
          build-args: |
            GITHUB_SHA=${{ github.sha }}
            BUILD_SHA=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Fallback deployment when Azure credentials are not available
  deploy-fallback:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set lowercase repository owner
        run: echo "REPO_OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        
      - name: Check Azure credentials and show deployment status
        env:
          AZURE_CREDS: ${{ secrets.AZURE_CREDENTIALS }}
        run: |
          if [ -z "$AZURE_CREDS" ]; then
            echo "üîß DEPLOYMENT STATUS: PARTIAL SUCCESS"
            echo ""
            echo "‚úÖ Code fixes successfully built and pushed to registry"
            echo "‚úÖ Docker image available at: ghcr.io/${{ env.REPO_OWNER_LOWER }}/aecma-web:${{ github.sha }}"
            echo ""
            echo "‚ùå Production deployment skipped - Azure credentials not configured"
            echo ""
            echo "üìã To complete production deployment:"
            echo "1. Configure Azure secrets in repository settings"
            echo "2. Run: gh workflow run .github/workflows/release.yml"
            echo ""
            echo "üè∑Ô∏è  Image Tag: ${{ github.sha }}"
            echo "üì¶ Registry: GitHub Container Registry (GHCR)"
          else
            echo "‚úÖ Azure credentials configured - production deployment will be handled by release workflow"
          fi

  # Trigger production deployment when Azure credentials are available  
  trigger-production:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      
      - name: Check and trigger production deployment
        env:
          AZURE_CREDS: ${{ secrets.AZURE_CREDENTIALS }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -n "$AZURE_CREDS" ]; then
            echo "üöÄ Azure credentials found - triggering production deployment..."
            gh workflow run .github/workflows/release.yml --ref ${{ github.ref_name }}
            
            echo "‚è≥ Waiting for deployment to start..."
            sleep 30
            
            echo "üîç Checking production deployment status..."
            if curl -s --max-time 10 https://aecma-prod.azurewebsites.net/api/version | grep -q "${{ github.sha }}"; then
              echo "‚úÖ Production deployment successful - version matches"
            else
              echo "‚ö†Ô∏è  Production version check failed or still updating"
              echo "üîÑ Deployment may still be in progress"
            fi
          else
            echo "‚ÑπÔ∏è  Azure credentials not configured - skipping production deployment trigger"
          fi