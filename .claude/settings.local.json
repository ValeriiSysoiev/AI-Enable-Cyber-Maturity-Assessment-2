{
  "permissions": {
    "allow": [
      "Bash(terraform:*)",
      "Bash(chmod:*)",
      "Bash(npm run build:*)",
      "Bash(npx tsc:*)",
      "Bash(mkdir:*)",
      "Bash(./scripts/test_validation.sh:*)",
      "Bash(./scripts/bootstrap_search_index.sh:*)",
      "Bash(export AZURE_SEARCH_SERVICE_NAME=\"search-aaa-demo\")",
      "Bash(az keyvault secret list:*)",
      "Bash(az search admin-key show:*)",
      "Bash(bash:*)",
      "Bash(az search service show:*)",
      "Bash(az account get-access-token:*)",
      "Bash(git checkout:*)",
      "Bash(pip-audit:*)",
      "Bash(PATH=/Users/valsysoiev/Library/Python/3.13/bin:$PATH pip-audit --format=json --output=/tmp/pip-audit-results.json app/)",
      "Bash(PATH=/Users/valsysoiev/Library/Python/3.13/bin:$PATH bandit -r app/ -f json -o /tmp/bandit-results.json)",
      "Bash(PATH:*)",
      "Bash(jq:*)",
      "Bash(az acr build:*)",
      "Bash(az containerapp show:*)",
      "Bash(az containerapp update:*)",
      "Bash(az containerapp registry set:*)",
      "Bash(az containerapp:*)",
      "Bash(az resource list:*)",
      "Bash(az monitor action-group list:*)",
      "Bash(az monitor metrics alert list:*)",
      "Bash(./scripts/verify_live.sh:*)",
      "Bash(curl:*)",
      "Bash(npm run test:e2e:*)",
      "Bash(npx playwright test:*)",
      "Bash(python -m py_compile:*)",
      "Bash(python3:*)",
      "Bash(python scripts/security/validate_setup.py:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(grep:*)",
      "Bash(command -v:*)",
      "Bash(/dev/null)",
      "Bash(brew install:*)",
      "Bash(if ! gh auth status)",
      "Bash(then gh auth login --hostname github.com --web --git-protocol https)",
      "Bash(fi)",
      "Bash(gh auth:*)",
      "Bash(OWNER=\"ValeriiSysoiev\")",
      "Bash(REPO=\"AI-Enable-Cyber-Maturity-Assessment-2\")",
      "Bash(DEFAULT_BRANCH=\"main\")",
      "Bash(echo:*)",
      "Bash(git rev-parse:*)",
      "Bash(export PATH=\"/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\")",
      "Bash(timeout 300 gh auth login:*)",
      "Bash(gh repo view:*)",
      "Bash(git pull:*)",
      "Bash(npm run dev:*)",
      "Bash(node test-auth-flow.js)",
      "Bash(rm:*)",
      "Bash(python:*)",
      "Bash(export GIT_SHA=\"abc123def456\")",
      "Bash(export:*)",
      "Bash(export APP_VERSION=\"1.2.3\")",
      "Bash(git branch:*)",
      "Bash(git merge:*)",
      "Bash(npx playwright:*)",
      "Bash(timeout 60 npx playwright test engagements.spec.ts --config=e2e/playwright.config.ts)",
      "Bash(./scripts/verify_s1_live.sh:*)",
      "Bash(touch:*)",
      "Bash(pip3 list:*)",
      "Bash(node:*)",
      "Bash(API_BASE_URL=\"http://invalid.example.com\" WEB_BASE_URL=\"http://invalid.example.com\" bash -n scripts/verify_live.sh)",
      "Bash(API_BASE_URL=\"http://invalid.example.com:9999\" WEB_BASE_URL=\"http://invalid.example.com:9999\" ./scripts/verify_live.sh)",
      "Bash(API_BASE_URL=\"http://httpbin.org\" WEB_BASE_URL=\"http://httpbin.org\" ./scripts/verify_live.sh)",
      "Bash(./scripts/lib/safe_test.sh:*)",
      "Bash(API_BASE_URL=\"https://httpbin.org\" WEB_BASE_URL=\"https://httpbin.org\" bash -n scripts/verify_live.sh)",
      "Bash(git stash push:*)",
      "Bash(AZURE_RESOURCE_GROUP=\"\" ./scripts/azure/appinsights_setup.sh)",
      "Bash(API_BASE_URL=\"https://example.com/api\" WEB_BASE_URL=\"https://example.com\" timeout 30 ./scripts/verify_live.sh)",
      "Bash(API_BASE_URL=\"https://httpbin.org\" WEB_BASE_URL=\"https://httpbin.org\" ./scripts/verify_live.sh)",
      "Bash(npm run type-check:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run:*)",
      "Bash(find:*)",
      "Bash(source:*)",
      "Bash(sed:*)",
      "Bash(API_BASE_URL=\"https://httpbin.org\" WEB_BASE_URL=\"https://httpbin.org\" timeout 30 bash -n scripts/verify_live.sh)",
      "Bash(git tag --list)",
      "Bash(git tag:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh workflow run:*)",
      "Bash(az account show:*)",
      "Bash(gh api:*)",
      "Bash(SUBSCRIPTION_ID=\"10233675-d493-4a97-9c81-4001e353a7bb\")",
      "Bash(TENANT_ID=\"8354a4cc-cfd8-41e4-9416-ea0304bc62e1\")",
      "Bash(RG_NAME=\"rg-cybermat-prd\")",
      "Bash(__NEW_LINE__ echo \"Creating resource group: $RG_NAME\")",
      "Bash(az group create:*)",
      "Bash(__NEW_LINE__ echo \"Assigning Contributor role to service principal on RG scope...\")",
      "Bash(az role assignment create:*)",
      "Bash(__NEW_LINE__ echo \"Azure setup complete:\")",
      "Bash(timeout:*)",
      "Bash(./scripts/azure/prod_setup.sh:*)",
      "Bash(gh variable list:*)",
      "Bash(gh secret list:*)",
      "Bash(az cosmosdb list:*)",
      "Bash(gh variable set:*)",
      "Bash(DEPLOY_RUN_ID=\"17055651829\")",
      "Bash(UAT_RUN_ID=\"17055707290\")",
      "Bash(az webapp config show:*)",
      "Bash(az webapp config appsettings list:*)",
      "Bash(az webapp config appsettings set:*)",
      "Bash(az webapp config set:*)",
      "Bash(az webapp show:*)",
      "Bash(npm ci:*)",
      "Bash(cp:*)",
      "Bash([ -d public ])",
      "Bash(az webapp deploy:*)",
      "Bash(npm:*)",
      "Bash(az:*)",
      "Bash(unzip:*)",
      "Bash(cat:*)",
      "Bash(\"COSMOS_ENDPOINT=https://cdb-cybermat-prd.documents.azure.com:443/\" )",
      "Bash(\"COSMOS_DATABASE_NAME=appdb\" )",
      "Bash(\"WEBSITES_PORT=8000\" )",
      "Bash(\"PORT=8000\" )",
      "Bash(\"SCM_DO_BUILD_DURING_DEPLOYMENT=true\" )",
      "Bash(\"LOG_LEVEL=INFO\" )",
      "Bash(\"LOG_FORMAT=json\" )",
      "Bash(\"API_ALLOWED_ORIGINS=https://web-cybermat-prd.azurewebsites.net,https://localhost:3000\" )",
      "Bash(\"CACHE_ENABLED=true\" )",
      "Bash(\"RAG_MODE=none\" )",
      "Bash(\"AUTH_GROUPS_MODE=disabled\" )",
      "Bash(\"ENVIRONMENT=production\")",
      "WebFetch(domain:api-cybermat-prd.scm.azurewebsites.net)",
      "Bash(./verify_live.sh)",
      "WebFetch(domain:api-cybermat-prd.scm.azurecr.io)",
      "Bash(zip:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/Users/valsysoiev/AI-Enable-Cyber-Maturity-Assessment"
    ]
  }
}